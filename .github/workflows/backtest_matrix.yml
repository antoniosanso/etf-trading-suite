
name: Backtest via Web Ingest (alias buffer key)

on:
  workflow_dispatch: {}

jobs:
  backtest-all:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: etf-trading-engine
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: python -m pip install -r etf-trading-engine/requirements.txt pyyaml
      - name: Download EOD from Yahoo
        run: |
          python etf-trading-engine/scripts/download_eod_yf.py             --universe etf-trading-config/universe.csv             --output etf-trading-engine/data/eod.csv             --start 2018-01-01             --threads 1 --sleep 1 --min_success 2
      - name: Sanity check
        run: python etf-trading-engine/scripts/sanity_check.py --data etf-trading-engine/data/eod.csv
      - name: Build runtime config (inject params incl. alias)
        run: |
          python - << 'PY'
          import yaml, os
          src = "etf-trading-config/model.yaml"
          dst = "etf-trading-config/model_runtime.yaml"
          with open(src, "r", encoding="utf-8") as f:
              cfg = yaml.safe_load(f) or {}
          # ensure top-level
          params = cfg.get("params") or {}
          atr = params.get("atr_pct", 1.0)
          buf = params.get("buffer_mul", params.get("buffer_mult", 1.0))
          params["atr_pct"] = atr
          params["buffer_mul"] = buf
          params["buffer_mult"] = buf   # alias per eventuale richiesta con 't'
          cfg["params"] = params
          # ensure inside each run
          runs = cfg.get("runs") or {}
          for k, v in list(runs.items()):
              if isinstance(v, dict):
                  pr = v.get("params") or {}
                  pr["atr_pct"] = pr.get("atr_pct", atr)
                  val = pr.get("buffer_mul", pr.get("buffer_mult", buf))
                  pr["buffer_mul"] = val
                  pr["buffer_mult"] = val
                  v["params"] = pr
                  runs[k] = v
          cfg["runs"] = runs
          with open(dst, "w", encoding="utf-8") as f:
              yaml.safe_dump(cfg, f, sort_keys=False, allow_unicode=True)
          print("WROTE:", dst)
          PY
      - name: Run backtests (using runtime config)
        run: |
          python etf-trading-engine/scripts/run_ci_backtest.py             --config etf-trading-config/model_runtime.yaml             --data etf-trading-engine/data/eod.csv             --outdir outputs
      - name: Walk-Forward report (all runs)
        run: |
          python etf-trading-engine/scripts/walk_forward.py             --config etf-trading-config/model_runtime.yaml             --data etf-trading-engine/data/eod.csv             --windows etf-trading-config/wf_windows.yaml             --outdir outputs
      - uses: actions/upload-artifact@v4
        with:
          name: kpis-all-runs
          path: |
            outputs/**/kpis.json
            outputs/**/summary.txt
            outputs/**/equity_curve.csv
            outputs/**/wf_report.json
            outputs/**/wf_summary.txt
          if-no-files-found: warn
