name: Daily CI & Publish
on: { workflow_dispatch: {}, schedule: [ { cron: "0 5 * * *" } ] }
jobs:
  daily-ci:
    runs-on: ubuntu-latest
    env: { PYTHONPATH: etf-trading-engine }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r etf-trading-engine/requirements.txt
          pip install yfinance feedparser beautifulsoup4 requests vaderSentiment
      - name: Download EOD from Yahoo Finance
        run: |
          python etf-trading-engine/scripts/download_eod_yf.py --universe ./etf-trading-config/universe.csv --output ./etf-trading-engine/data/eod.csv --start 2018-01-01 --threads 4 --sleep 0.25 --adjusted
      - name: Sanity check EOD
        run: |
          python etf-trading-engine/scripts/sanity_check.py --data ./etf-trading-engine/data/eod.csv --min_rows 1000 --max_dd_allowed_pct 90
      - name: Aggregate multi-source news
        run: |
          python etf-trading-engine/scripts/aggregate_news.py --sources ./etf-trading-config/news_sources.yaml --universe ./etf-trading-config/universe.csv --topics ./etf-trading-config/mappings/etf_topics.csv --outdir ./features
      - name: Build features (respect source=multi)
        run: |
          python etf-trading-engine/scripts/build_features.py --features ./etf-trading-config/features.yaml --universe ./etf-trading-config/universe.csv --outdir ./features
      - name: Fundamentals (top holdings)
        run: |
          python etf-trading-engine/scripts/aggregate_fundamentals.py --universe ./etf-trading-config/universe.csv --outdir ./features
      - name: Generate signals
        run: |
          python etf-trading-engine/scripts/signals.py --config ./etf-trading-config/signals.yaml --data ./etf-trading-engine/data/eod.csv --outdir ./outputs --features_cfg ./etf-trading-config/features.yaml --features_dir ./features
      - name: Operational report
        run: |
          python etf-trading-engine/scripts/operational_report.py --data ./etf-trading-engine/data/eod.csv --config ./etf-trading-config/operational.yaml --outdir ./outputs
      - name: Run backtest
        run: |
          python etf-trading-engine/scripts/run_ci_backtest.py --config etf-trading-config/model.yaml --data etf-trading-engine/data/eod.csv --outdir outputs
      - name: Walk-Forward validation
        run: |
          python etf-trading-engine/scripts/walk_forward.py --config etf-trading-config/model.yaml --data etf-trading-engine/data/eod.csv --windows etf-trading-config/wf_windows.yaml --outdir outputs
      - name: Guardrails (stop criteria)
        run: |
          set +e
          python etf-trading-engine/scripts/guardrails.py --config ./etf-trading-config/model.yaml --kpis ./outputs/kpis.json --wf ./outputs/wf_report.json --out ./outputs/guardrails_status.json
          EXIT=$?; cat ./outputs/guardrails_status.json || true
          if [ "$EXIT" -eq 3 ]; then echo "Guardrails RED -> failing pipeline"; exit 3
          elif [ "$EXIT" -eq 2 ]; then echo "Guardrails YELLOW -> continuing"; exit 0
          else echo "Guardrails GREEN"; exit 0; fi
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: daily-artifacts
          path: |
            outputs/**
            features/**
            etf-trading-engine/data/eod.csv
