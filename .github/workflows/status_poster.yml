name: Public Status Poster
on:
  workflow_dispatch:
  schedule:
    - cron: "30 6 * * *"
permissions:
  contents: read
  issues: write
jobs:
  build-status:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Universe snapshot
        run: |
          python etf-trading-engine/scripts/fetch_universe.py \
            --repo antoniosanso/etf-trading-suite \
            --path etf-trading-config/universe.csv \
            --outdir outputs/universe
      - name: KPI aggregator (best-effort)
        run: |
          python etf-trading-engine/scripts/kpi_aggregator.py \
            --backtest outputs/backtest/kpis.json \
            --wf outputs/wf/wf_report.json \
            --out outputs/status_kpi.json || true
      - name: Compose status.json
        run: |
          python etf-trading-engine/scripts/generate_status.py \
            --universe-json outputs/universe/universe_snapshot.json \
            --kpi-json outputs/status_kpi.json \
            --out outputs/status.json
      - name: Upload status artifact
        uses: actions/upload-artifact@v4
        with:
          name: public-status
          path: outputs/status.json
      - name: Create/Update Status Issue
        uses: actions/github-script@v7
        with:
          script: |
            const anchor = "ETF-TRADING-SUITE PUBLIC STATUS ANCHOR 9E1F2C";
            const fs = require('fs');
            const path = require('path');
            const statusPath = path.join(process.cwd(), 'outputs', 'status.json');
            const content = fs.readFileSync(statusPath, 'utf8');
            const payload = JSON.parse(content);
            const title = anchor + " â€” Live Status";
            const issues = await github.paginate(github.rest.issues.listForRepo, {owner: context.repo.owner, repo: context.repo.repo, state: "open"});
            let issue = issues.find(i => i.title.includes(anchor));
            const body = [
              "### " + title,
              "",
              "- Updated (UTC): " + new Date().toISOString(),
              "- Universe unique tickers: **" + (payload.universe?.unique_tickers ?? "n/a") + "**",
              "- Duplicate rows: " + (payload.universe?.duplicate_rows ?? "n/a"),
              "",
              "KPIs (if present):",
              "  - Sharpe: " + (payload.kpi?.kpis?.sharpe ?? "n/a"),
              "  - Profit Factor: " + (payload.kpi?.kpis?.profit_factor ?? "n/a"),
              "  - MaxDD: " + (payload.kpi?.kpis?.max_drawdown ?? "n/a"),
              "  - WF Calmar CoV: " + (payload.kpi?.walk_forward?.calmar_cov ?? "n/a"),
              "",
              "`" + anchor + "`"
            ].join("\\n");
            if (!issue) {
              await github.rest.issues.create({owner: context.repo.owner, repo: context.repo.repo, title, body});
            } else {
              await github.rest.issues.update({owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, title, body});
            }
